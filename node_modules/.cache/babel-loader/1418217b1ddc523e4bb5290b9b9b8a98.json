{"ast":null,"code":"var _jsxFileName = \"/root/react/counters/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  // state = {\n  //   counters: [\n  //     { id: 1, value: 0 },\n  //     { id: 2, value: 1 },\n  //     { id: 3, value: 2 },\n  //     { id: 4, value: 3 }\n  //   ]\n  // };\n  // handleIncrement = counterId => {\n  //   const counters = [...this.state.counters];\n  //   const index = counters.indexOf(counterId);\n  //   counters[index] = { ...counterId };\n  //   counters[index].value++;\n  //   this.setState({ counters });\n  // };\n  // handleDecrement = counterId => {\n  //   const counters = [...this.state.counters];\n  //   const index = counters.indexOf(counterId);\n  //   counters[index] = { ...counterId };\n  //   if (counters[index].value !== 0) counters[index].value--;\n  //   this.setState({ counters });\n  // };\n  // counterDelete = counter => {\n  //   const counters = this.state.counters.filter(c => c.id !== counter.id);\n  //   this.setState({ counters });\n  // };\n  // handleReset = () => {\n  //   const counters = this.state.counters.map(c => {\n  //     c.value = 0;\n  //     return c;\n  //   });\n  //   this.setState({ counters });\n  // };\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      totalCounters: this.state.counters.length,\n      onReset: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Counters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/root/react/counters/src/App.js"],"names":["React","Component","NavBar","Counters","App","render","state","counters","length","handleReset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,sCAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MADrC;AAEE,MAAA,OAAO,EAAE,KAAKC,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAUD;;AAhDyB;;AAmD5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  // state = {\n  //   counters: [\n  //     { id: 1, value: 0 },\n  //     { id: 2, value: 1 },\n  //     { id: 3, value: 2 },\n  //     { id: 4, value: 3 }\n  //   ]\n  // };\n  // handleIncrement = counterId => {\n  //   const counters = [...this.state.counters];\n  //   const index = counters.indexOf(counterId);\n  //   counters[index] = { ...counterId };\n  //   counters[index].value++;\n  //   this.setState({ counters });\n  // };\n\n  // handleDecrement = counterId => {\n  //   const counters = [...this.state.counters];\n  //   const index = counters.indexOf(counterId);\n  //   counters[index] = { ...counterId };\n  //   if (counters[index].value !== 0) counters[index].value--;\n  //   this.setState({ counters });\n  // };\n\n  // counterDelete = counter => {\n  //   const counters = this.state.counters.filter(c => c.id !== counter.id);\n  //   this.setState({ counters });\n  // };\n\n  // handleReset = () => {\n  //   const counters = this.state.counters.map(c => {\n  //     c.value = 0;\n  //     return c;\n  //   });\n  //   this.setState({ counters });\n  // };\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar\n          totalCounters={this.state.counters.length}\n          onReset={this.handleReset}\n        />\n        <Counters\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}